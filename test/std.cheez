pub IO :: struct {}

impl IO {
    pub NEW_LINE :: '`n'

    pub print_string :: (str: string) do _println(str)

    pub print_bool :: (b: bool) do
        _println(if b then "true" else "false")

    pub print_char :: (c: char) { _print_char(c) }

    pub print_int :: (mut b: int) {
        print_rec :: (i: int) do
            print_digit :: (d: int) do
                if d == 0 then _print_char('0') else
                if d == 1 then _print_char('1') else
                if d == 2 then _print_char('2') else
                if d == 3 then _print_char('3') else
                if d == 4 then _print_char('4') else
                if d == 5 then _print_char('5') else
                if d == 6 then _print_char('6') else
                if d == 7 then _print_char('7') else
                if d == 8 then _print_char('8') else
                if d == 9 then _print_char('9')
            if i >= 10 then print_rec(i / 10)
            print_digit(i % 10)
        if b < 0 do
            _print("-")
            b = -b
        print_rec(b)
        _println("")
    }

}